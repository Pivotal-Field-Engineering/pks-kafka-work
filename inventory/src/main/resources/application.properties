
server.port=8089
spring.cloud.stream.schemaRegistryClient.endpoint=http://localhost:8081
spring.cloud.stream.kafka.binder.brokers=localhost

#Inventory Topic Output Channel - Used by inventory source to update inventory 
spring.cloud.stream.bindings.inventoryout.destination=inventory-topic
spring.cloud.stream.bindings.inventoryout.producer.useNativeEncoding=true
spring.cloud.stream.kafka.bindings.inventoryout.producer.configuration.contentType=application/*+avro
spring.cloud.stream.kafka.bindings.inventoryout.producer.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer
spring.cloud.stream.kafka.bindings.inventoryout.producer.configuration.value.serializer=io.confluent.kafka.streams.serdes.avro.SpecificAvroSerializer
spring.cloud.stream.kafka.bindings.inventoryout.producer.configuration.schema.registry.url=http://localhost:8081

spring.cloud.stream.bindings.inventorystreamout.destination=inventory-topic
spring.cloud.stream.bindings.inventorystreamout.producer.useNativeEncoding=true
spring.cloud.stream.kafka.streams.bindings.inventorystreamout.producer.configuration.contentType=application/*+avro
spring.cloud.stream.kafka.streams.bindings.inventorystreamout.producer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.inventorystreamout.producer.value-serde=io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
spring.cloud.stream.kafka.streams.bindings.inventorystreamout.producer.configuration.schema.registry.url=http://localhost:8081


#Inventory Input Stream - Materialized as GlobalKTable for Order Validation
spring.cloud.stream.bindings.inventoryin.destination=inventory-topic
spring.cloud.stream.bindings.inventoryin.consumer.useNativeDecoding=true
spring.cloud.stream.kafka.streams.bindings.inventoryin.consumer.configuration.contentType=application/*+avro
spring.cloud.stream.kafka.streams.bindings.inventoryin.consumer.application-id=inventory-consumer-v1
spring.cloud.stream.kafka.streams.bindings.inventoryin.consumer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.inventoryin.consumer.value-serde=io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
spring.cloud.stream.kafka.streams.bindings.inventoryin.consumer.configuration.schema.registry.url=http://localhost:8081
spring.cloud.stream.kafka.streams.bindings.inventoryin.consumer.materialized-as=inventory-store


#Order Event Input Stream For Inventory Validation
spring.cloud.stream.bindings.orderstreamin.destination=order-event-topic
spring.cloud.stream.bindings.orderstreamin.consumer.useNativeDecoding=true
spring.cloud.stream.kafka.streams.bindings.orderstreamin.consumer.configuration.contentType=application/*+avro
spring.cloud.stream.kafka.streams.bindings.orderstreamin.consumer.application-id=order-inventory-consumer-v2
spring.cloud.stream.kafka.streams.bindings.orderstreamin.consumer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.orderstreamin.consumer.value-serde=io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
spring.cloud.stream.kafka.streams.bindings.orderstreamin.consumer.configuration.schema.registry.url=http://localhost:8081

#Write Inventory validation results to Order Validation Event Stream
spring.cloud.stream.bindings.ordervalidationstreamout.destination=ordervalidation-event-topic
spring.cloud.stream.bindings.ordervalidationstreamout.producer.useNativeEncoding=true
spring.cloud.stream.kafka.streams.bindings.ordervalidationstreamout.producer.configuration.use-native-encoding=true
spring.cloud.stream.kafka.streams.bindings.ordervalidationstreamout.producer.configuration.contentType=application/*+avro
spring.cloud.stream.kafka.streams.bindings.ordervalidationstreamout.producer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.ordervalidationstreamout.producer.value-serde=io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
spring.cloud.stream.kafka.streams.bindings.ordervalidationstreamout.producer.configuration.schema.registry.url=http://localhost:8081


spring.cloud.stream.bindings.ordervalidationstreamin.destination=ordervalidation-event-topic
spring.cloud.stream.bindings.ordervalidationstreamin.consumer.useNativeDecoding=true
spring.cloud.stream.kafka.streams.bindings.ordervalidationstreamin.consumer.application-id=ordervalidation-inventory-consumer-v1
spring.cloud.stream.kafka.streams.bindings.ordervalidationstreamin.consumer.configuration.use-native-encoding=true
spring.cloud.stream.kafka.streams.bindings.ordervalidationstreamin.consumer.configuration.contentType=application/*+avro
spring.cloud.stream.kafka.streams.bindings.ordervalidationstreamin.consumer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.ordervalidationstreamin.consumer.value-serde=io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
spring.cloud.stream.kafka.streams.bindings.ordervalidationstreamin.consumer.configuration.schema.registry.url=http://localhost:8081


#Order Event Input Stream For Inventory Validation
spring.cloud.stream.bindings.updinvorderstreamin.destination=order-event-topic
spring.cloud.stream.bindings.updinvorderstreamin.consumer.useNativeDecoding=true
spring.cloud.stream.kafka.streams.bindings.updinvorderstreamin.consumer.configuration.contentType=application/*+avro
spring.cloud.stream.kafka.streams.bindings.updinvorderstreamin.consumer.application-id=order-updinventory-consumer-v1
spring.cloud.stream.kafka.streams.bindings.updinvorderstreamin.consumer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.updinvorderstreamin.consumer.value-serde=io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
spring.cloud.stream.kafka.streams.bindings.updinvorderstreamin.consumer.configuration.schema.registry.url=http://localhost:8081

