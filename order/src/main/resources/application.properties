
server.port=8087
spring.cloud.stream.bindings.orderout.contentType=application/*+avro
spring.cloud.stream.bindings.orderout.destination=order-event-topic
spring.cloud.stream.schemaRegistryClient.endpoint=http://localhost:8081

spring.cloud.stream.kafka.binder.brokers=localhost
spring.cloud.stream.bindings.orderout.producer.useNativeEncoding: true
spring.cloud.stream.kafka.bindings.orderout.producer.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer
spring.cloud.stream.kafka.bindings.orderout.producer.configuration.schema.registry.url=http://localhost:8081
spring.cloud.stream.kafka.bindings.orderout.producer.configuration.value.serializer=io.confluent.kafka.streams.serdes.avro.SpecificAvroSerializer

#KStream For Output to Order-event-topic
spring.cloud.stream.bindings.orderstreamout.destination=order-event-topic
spring.cloud.stream.bindings.orderstreamout.producer.use-native-encoding=true
spring.cloud.stream.kafka.streams.bindings.orderstreamout.producer.configuration.use-native-encoding=true
spring.cloud.stream.kafka.streams.bindings.orderstreamout.producer.configuration.contentType=application/*+avro
spring.cloud.stream.kafka.streams.bindings.orderstreamout.producer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.orderstreamout.producer.value-serde=io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
spring.cloud.stream.kafka.streams.bindings.orderstreamout.producer.configuration.schema.registry.url=http://localhost:8081


#KStream for input from order-event-topic

spring.cloud.stream.bindings.orderstreamin.destination=order-event-topic
spring.cloud.stream.bindings.orderstreamin.consumer.use-native-decoding=true
spring.cloud.stream.kafka.streams.bindings.orderstreamin.consumer.application-id=order-stream-consumer-v1
spring.cloud.stream.kafka.streams.bindings.orderstreamin.consumer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.orderstreamin.consumer.value-serde=io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
spring.cloud.stream.kafka.streams.bindings.orderstreamin.consumer.configuration.schema.registry.url=http://localhost:8081
spring.cloud.stream.kafka.streams.bindings.orderstreamin.consumer.materialized-as=order-store


#spring.cloud.stream.bindings.orderin.destination=order-event-topic
#spring.cloud.stream.bindings.orderin.consumer.useNativeDecoding: true
#spring.cloud.stream.kafka.streams.bindings.orderin.consumer.application-id=order-consumer-v1
#spring.cloud.stream.kafka.streams.bindings.orderin.consumer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
#spring.cloud.stream.kafka.streams.bindings.orderin.consumer.value-serde=io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
#spring.cloud.stream.kafka.streams.bindings.orderin.consumer.configuration.schema.registry.url=http://localhost:8081
#spring.cloud.stream.kafka.streams.bindings.orderin.consumer.materializedAs=order-store


